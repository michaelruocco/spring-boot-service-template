openapi: "3.0.3"
info:
  title: spring boot template API
  version: v1

servers:
  - url: http://localhost:8099/v1
    description: V1 local server for development

paths:
  '/widgets':
    post:
      tags:
        - widgets
      summary: create a widget
      operationId: create-widget
      requestBody:
        description: details of the widget to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWidgetRequest"
      responses:
        '201':
          description: created widget
          headers:
            Location:
              description: url of created widget
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Widget"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  '/widgets/{id}':
    get:
      tags:
        - widgets
      summary: specific widget
      operationId: get-widget-by-id
      parameters:
        - name: id
          in: path
          required: true
          description: the id of the widget to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: widget
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Widget"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  '/widgets/pages':
    post:
      tags:
        - widgets
      summary: query a page of widgets
      operationId: query-widgets-page
      requestBody:
        description: details of the page of widgets to be queried
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryWidgetsPageRequest"
      responses:
        '200':
          description: page of widgets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WidgetsPage"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  '/test/widgets':
    delete:
      tags:
        - test
      summary: delete all widgets for testing purposes
      operationId: delete-all-widgets
      responses:
        '204':
          description: all widgets have been deleted successfully
  '/test/random-uuid-overrides':
    post:
      tags:
        - test
      summary: override the next randomly generated uuid for testing purposes
      operationId: set-uuid-override
      requestBody:
        description: the next uuid to be used when a uuid is randomly generated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RandomUuidOverride"
      responses:
        '200':
          description: the uuid override that has been set
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RandomUuidOverride"
    delete:
      tags:
        - test
      summary: delete any override for next randomly generated uuid
      operationId: delete-uuid-override
      responses:
        '204':
          description: the uuid override has been deleted successfully

components:
  schemas:
    QueryWidgetsPageRequest:
      type: object
      required:
        - pageParams
      properties:
        pageParams:
          $ref: "#/components/schemas/PageParams"
    PageParams:
      type: object
      required:
        - limit
        - offset
      properties:
        limit:
          type: integer
          format: int32
          default: 50
          minimum: 1
          maximum: 100
        offset:
          type: integer
          format: int32
          default: 0
          minimum: 0
    CreateWidgetRequest:
      type: object
      required:
        - description
        - cost
      properties:
        description:
          type: string
        cost:
          $ref: "#/components/schemas/MonetaryAmount"
    Widget:
      type: object
      required:
        - id
        - description
        - cost
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        cost:
          $ref: "#/components/schemas/MonetaryAmount"
        createdAt:
          type: string
          format: date-time
    MonetaryAmount:
      type: object
      required:
        - value
        - currency
      properties:
        value:
          type: number
        currency:
          type: string
    WidgetsPage:
      type: object
      required:
        - request
        - totalCount
        - widgets
      properties:
        request:
          $ref: "#/components/schemas/QueryWidgetsPageRequest"
        totalCount:
          type: integer
        widgets:
          $ref: "#/components/schemas/Widgets"
    Widgets:
      type: array
      items:
        $ref: "#/components/schemas/Widget"
    RandomUuidOverride:
      type: array
      items:
        type: string
        format: uuid
    Error:
      type: object
      required:
        - timestamp
        - status
        - error
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        path:
          type: string
        detail:
          type: string