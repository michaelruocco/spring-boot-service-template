buildscript {
    ext {
        springBootVersion = "${springBootVersion}"
    }
}

plugins {
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "1.0.14.RELEASE"
    id "org.unbroken-dome.test-sets" version "4.0.0"
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
    id "com.bmuschko.docker-remote-api" version "8.1.0"
    id "com.avast.gradle.docker-compose" version "0.16.9"
}

testSets {
    integrationTest
}

configurations {
    testRuntimeOnly.exclude module: "slf4j-simple"
}

ext["junit-jupiter.version"] = "${junitVersion}"

ext {
    testingClocksVersion = "0.1.13"

    imageName = "michaelruocco/${project.name}"
}

dependencies {
    runtimeOnly "io.micrometer:micrometer-registry-prometheus"

    implementation "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "org.springdoc:springdoc-openapi-ui:1.6.11"
    implementation "org.springframework.hateoas:spring-hateoas:1.5.2"

    implementation "com.github.michaelruocco:testing-clocks:${testingClocksVersion}"
    implementation project(":service-template-api")
    implementation project(":service-template-entities")
    implementation project(":service-template-use-cases")
    implementation project(":service-template-repository")

    testImplementation "uk.org.webcompere:system-stubs-jupiter:2.0.1"

    integrationTestCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    integrationTestAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    integrationTestImplementation testFixtures(project(":service-template-api"))
    integrationTestImplementation "org.awaitility:awaitility:4.2.0"
    integrationTestImplementation "net.javacrumbs.json-unit:json-unit-assertj:2.35.0"
    integrationTestImplementation "com.github.michaelruocco:file-loader:6.0.6"
    integrationTestImplementation "com.github.michaelruocco:testing-clocks:${testingClocksVersion}"
    integrationTestImplementation "org.awaitility:awaitility:4.2.0"
    integrationTestImplementation "com.tngtech.keycloakmock:mock-junit5:0.12.0"
}

bootRun {
    systemProperties = System.properties
}

springBoot {
    buildInfo()
}

apply from: rootProject.file("publish.gradle")

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

docker {
    registryCredentials {
        username.set(System.getenv("DOCKER_USERNAME"))
        password.set(System.getenv("DOCKER_PASSWORD"))
    }
}

task buildImage(type: DockerBuildImage) {
    dependsOn bootJar
    inputDir.set(file("."))
    images.add("${imageName}:${version}")
    buildArgs = ["VERSION": version]
}

task pushImage(type: DockerPushImage) {
    images.set(buildImage.images)
}

dockerCompose {
    startedServices = ['service-template-spring-app', 'keycloak', 'otel-collector', 'wiremock']
    environment.put 'APP_VERSION', version
}
project.tasks["composeUp"].dependsOn buildImage